Q1.)https://leetcode.com/problems/majority-element

class Solution 
{
public:
    int majorityElement(vector<int>& nums)
    {
        int count=0;
        int candidate=0;
        for(int num:nums)
        {
            if(count==0)
            {
                candidate=num;
            }
            if(num==candidate)
                count=count+1;
            else
                count=count-1;
        }
           return candidate;
    }
};

Q2.)https://leetcode.com/problems/non-overlapping-intervals

class Solution 
{
public:
    int eraseOverlapIntervals(vector<vector<int>>& intervals) 
    {
        sort(intervals.begin(),intervals.end());    
        int count = 0;      
        int n = intervals.size();   
        int left = 0;   
        int right = 1;  
        
        while(right<n)  
        {
            if(intervals[left][1] <= intervals[right][0])   
            {
                left = right;
                right+=1;
            }
            else if(intervals[left][1]<=intervals[right][1])    
            {
                count+=1;       
                right+=1;
            }
            else if(intervals[left][1]>intervals[right][1])     
            {
                count+=1;
                left = right;
                right+=1;
            }
        }
        
        return count;
    }
};

Q3.)https://leetcode.com/problems/kth-largest-element-in-an-array

class Solution
{
public:
    int findKthLargest(vector<int>& nums, int k)
    {
       priority_queue<int,vector<int>,greater<int>>pq;
        for(int i=0;i<nums.size();i++)
        {
            pq.push(nums[i]);
            if(pq.size()>k)
            {
                pq.pop();
            }
        }
        return pq.top();
    }
};

Q4.)https://leetcode.com/problems/sort-an-array

class Solution
{
public:
    vector<int> sortArray(vector<int>& nums)
    {
        sort(nums.begin(),nums.end());
        return nums;
    }
};

Q6.)https://leetcode.com/problems/string-without-aaa-or-bbb

class Solution 
{
public:
    string strWithout3a3b(int A, int B)
    {
        string s = "";
        int a = 0, b = 0;
        while( A || B ) 
        {
            int ta = 0, tb = 0;
            while( ta < 2 && B <= 2 * A && A > 0 ) 
            { 
                s += "a"; ++ta; --A; 
            }
            while( tb < 2 && A <= 2 * B && B > 0 ) 
            { 
                s += "b"; ++tb; --B;
            }
        }
        return s;
    }
};
